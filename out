[Kreading in the graph[Kpreparing dimension 0: indexing 0-dimensional cells[Kpreparing dimension 0: indexing 1-dimensional cells[Kdimension 0: computed almost all of the coboundariesend computing the coboundaries.
The coboundaries are:
cell count in dimension 1 is 6
printing compressed_sparse_matrix as an uncompressed matrix in MATLAB format
0:-1...1:-1...0:1...3:1...2:-1...1:1...5:1...3:-1...4:-1...2:1...4:1...5:-1...
[-1 1 0 0 ;
-1 0 1 0 ;
0 -1 0 1 ;
0 1 -1 0 ;
0 0 -1 1 ;
0 0 1 -1 ;
]
end printing coboundaries.
[Kpreparing dimension 0: done computing coboundaries, now reducing memory consumption[Kpreparing dimension 1: indexing 1-dimensional cells[Kpreparing dimension 1: computing the filtration of all 2-dimensional cells[Kpreparing dimension 1: indexing 2-dimensional cells[Kdimension 1: computed almost all of the coboundariesend computing the coboundaries.
The coboundaries are:
cell count in dimension 2 is 2
printing compressed_sparse_matrix as an uncompressed matrix in MATLAB format
0:-1...0:1...1:1...0:1...1:1...1:-1...
[-1 1 0 1 0 0 ;
0 0 1 1 -1 0 ;
]
end printing coboundaries.
[Kpreparing dimension 1: done computing coboundaries, now reducing memory consumption[Kpreparing dimension 2: indexing 2-dimensional cells[Kpreparing dimension 2: computing the filtration of all 3-dimensional cells[Kpreparing dimension 2: indexing 3-dimensional cells[Kdimension 2: computed almost all of the coboundariesend computing the coboundaries.
The coboundaries are:
cell count in dimension 3 is 0
printing compressed_sparse_matrix as an uncompressed matrix in MATLAB format

[]
end printing coboundaries.
[Kpreparing dimension 2: done computing coboundaries, now reducing memory consumption
 coboundaries ... 
[-1,  1,  0,  0;
  -1,  0,  1,  0;
   0, -1,  0,  1;
   0,  1, -1,  0;
   0,  0, -1,  1;
   0,  0,  1, -1];
[-1,  1,  0,  1,  0,  0;
   0,  0,  1,  1, -1,  0];
[];

 sorting coboundaries ... 

 sorted coboundaries ... 

cbdy0=[ 0,  0, -1,  1;
   1,  0, -1,  0;
  -1,  0,  1,  0;
   1,  0,  0, -1;
   0, -1,  1,  0;
   0, -1,  0,  1];

cbdy1=[ 1, -1,  0,  1,  0,  0;
   1,  0,  0,  0,  1, -1];

 end sorted coboundaries ... 

%matlab list for spectra
betti0=[];
betti1=[];
betti2=[];

 % temp_B_ab prior to restriction and projection
[];

% B_ab post to restriction and projection
[];

% dim = 0filtration=1, next_filtration=2
 L_0=[0];
eig(L_0);
betti0=[betti0; size(null(L_0),2)];

 % temp_B_ab prior to restriction and projection
[];

% B_ab post to restriction and projection
[];

% dim = 1filtration=1, next_filtration=2
 L_1=[];
eig(L_1);
betti1=[betti1; size(null(L_1),2)];

% dim = 2filtration=1, next_filtration=2
 L_2=[];
eig(L_2);
betti2=[betti2; size(null(L_2),2)];

 % temp_B_ab prior to restriction and projection
[];

% B_ab post to restriction and projection
[];

% dim = 0filtration=2, next_filtration=3
 L_0=[0, 0;
  0, 0];
eig(L_0);
betti0=[betti0; size(null(L_0),2)];

 % temp_B_ab prior to restriction and projection
[];

% B_ab post to restriction and projection
[];

% dim = 1filtration=2, next_filtration=3
 L_1=[];
eig(L_1);
betti1=[betti1; size(null(L_1),2)];

% dim = 2filtration=2, next_filtration=3
 L_2=[];
eig(L_2);
betti2=[betti2; size(null(L_2),2)];

 % temp_B_ab prior to restriction and projection
[];

% B_ab post to restriction and projection
[];

% dim = 0filtration=3, next_filtration=4
 L_0=[0, 0, 0;
  0, 0, 0;
  0, 0, 0];
eig(L_0);
betti0=[betti0; size(null(L_0),2)];

 % temp_B_ab prior to restriction and projection
[];

% B_ab post to restriction and projection
[];

% dim = 1filtration=3, next_filtration=4
 L_1=[];
eig(L_1);
betti1=[betti1; size(null(L_1),2)];

% dim = 2filtration=3, next_filtration=4
 L_2=[];
eig(L_2);
betti2=[betti2; size(null(L_2),2)];

 % temp_B_ab prior to restriction and projection
[ 0;
   0;
  -1;
   1];

% B_ab post to restriction and projection
[ 0;
   0;
  -1;
   1];

% dim = 0filtration=4, next_filtration=5
 L_0=[ 0,  0,  0,  0;
   0,  0,  0,  0;
   0,  0,  1, -1;
   0,  0, -1,  1];
eig(L_0);
betti0=[betti0; size(null(L_0),2)];

 % temp_B_ab prior to restriction and projection
[];

% B_ab post to restriction and projection
[];

% dim = 1filtration=4, next_filtration=5
 L_1=[];
eig(L_1);
betti1=[betti1; size(null(L_1),2)];

% dim = 2filtration=4, next_filtration=5
 L_2=[];
eig(L_2);
betti2=[betti2; size(null(L_2),2)];

 % temp_B_ab prior to restriction and projection
[ 0,  1;
   0,  0;
  -1, -1;
   1,  0];

% B_ab post to restriction and projection
[ 0,  1;
   0,  0;
  -1, -1;
   1,  0];

% dim = 0filtration=5, next_filtration=6
 L_0=[ 1,  0, -1,  0;
   0,  0,  0,  0;
  -1,  0,  2, -1;
   0,  0, -1,  1];
eig(L_0);
betti0=[betti0; size(null(L_0),2)];

 % temp_B_ab prior to restriction and projection
[];

% B_ab post to restriction and projection
[];

% dim = 1filtration=5, next_filtration=6
 L_1=[2];
eig(L_1);
betti1=[betti1; size(null(L_1),2)];

% dim = 2filtration=5, next_filtration=6
 L_2=[];
eig(L_2);
betti2=[betti2; size(null(L_2),2)];

 % temp_B_ab prior to restriction and projection
[ 0,  1, -1;
   0,  0,  0;
  -1, -1,  1;
   1,  0,  0];

% B_ab post to restriction and projection
[ 0,  1, -1;
   0,  0,  0;
  -1, -1,  1;
   1,  0,  0];

% dim = 0filtration=6, next_filtration=7
 L_0=[ 2,  0, -2,  0;
   0,  0,  0,  0;
  -2,  0,  3, -1;
   0,  0, -1,  1];
eig(L_0);
betti0=[betti0; size(null(L_0),2)];

 % temp_B_ab prior to restriction and projection
[];

% B_ab post to restriction and projection
[];

% dim = 1filtration=6, next_filtration=7
 L_1=[2, 1;
  1, 2];
eig(L_1);
betti1=[betti1; size(null(L_1),2)];

% dim = 2filtration=6, next_filtration=7
 L_2=[];
eig(L_2);
betti2=[betti2; size(null(L_2),2)];

 % temp_B_ab prior to restriction and projection
[ 0,  1, -1,  1;
   0,  0,  0,  0;
  -1, -1,  1,  0;
   1,  0,  0, -1];

% B_ab post to restriction and projection
[ 0,  1, -1,  1;
   0,  0,  0,  0;
  -1, -1,  1,  0;
   1,  0,  0, -1];

% dim = 0filtration=7, next_filtration=8
 L_0=[ 3,  0, -2, -1;
   0,  0,  0,  0;
  -2,  0,  3, -1;
  -1,  0, -1,  2];
eig(L_0);
betti0=[betti0; size(null(L_0),2)];

 % temp_B_ab prior to restriction and projection
[ 1;
  -1;
   0;
   1];

% B_ab post to restriction and projection
[ 1;
  -1;
   0];

% dim = 1filtration=7, next_filtration=8
 L_1=[ 3,  0, -1;
   0,  3, -2;
  -1, -2,  2];
eig(L_1);
betti1=[betti1; size(null(L_1),2)];

% dim = 2filtration=7, next_filtration=8
 L_2=[];
eig(L_2);
betti2=[betti2; size(null(L_2),2)];

 % temp_B_ab prior to restriction and projection
[ 0,  1, -1,  1,  0;
   0,  0,  0,  0, -1;
  -1, -1,  1,  0,  1;
   1,  0,  0, -1,  0];

% B_ab post to restriction and projection
[ 0,  1, -1,  1,  0;
   0,  0,  0,  0, -1;
  -1, -1,  1,  0,  1;
   1,  0,  0, -1,  0];

% dim = 0filtration=8, next_filtration=9
 L_0=[ 3,  0, -2, -1;
   0,  1, -1,  0;
  -2, -1,  4, -1;
  -1,  0, -1,  2];
eig(L_0);
betti0=[betti0; size(null(L_0),2)];

 % temp_B_ab prior to restriction and projection
[ 1;
  -1;
   0;
   1;
   0];

% B_ab post to restriction and projection
[ 1;
  -1;
   0;
   1];

% dim = 1filtration=8, next_filtration=9
 L_1=[ 3,  0, -1,  0;
   0,  3, -2,  0;
  -1, -2,  2, -1;
   0,  0, -1,  3];
eig(L_1);
betti1=[betti1; size(null(L_1),2)];

% dim = 2filtration=8, next_filtration=9
 L_2=[3];
eig(L_2);
betti2=[betti2; size(null(L_2),2)];

 % temp_B_ab prior to restriction and projection
[ 0,  1, -1,  1,  0,  0;
   0,  0,  0,  0, -1, -1;
  -1, -1,  1,  0,  1,  0;
   1,  0,  0, -1,  0,  1];

% B_ab post to restriction and projection
[ 0,  1, -1,  1,  0,  0;
   0,  0,  0,  0, -1, -1;
  -1, -1,  1,  0,  1,  0;
   1,  0,  0, -1,  0,  1];

% dim = 0filtration=9, next_filtration=10
 L_0=[ 3,  0, -2, -1;
   0,  2, -1, -1;
  -2, -1,  4, -1;
  -1, -1, -1,  3];
eig(L_0);
betti0=[betti0; size(null(L_0),2)];

 % temp_B_ab prior to restriction and projection
[ 1,  1;
  -1,  0;
   0,  0;
   1,  0;
   0,  1;
   0, -1];

% B_ab post to restriction and projection
[ 1,  1;
  -1,  0;
   0,  0;
   1,  0;
   0,  1];

% dim = 1filtration=9, next_filtration=10
 L_1=[ 4,  0, -1,  0,  0;
   0,  3, -2,  0, -1;
  -1, -2,  2, -1,  1;
   0,  0, -1,  3,  0;
   0, -1,  1,  0,  3];
eig(L_1);
betti1=[betti1; size(null(L_1),2)];

% dim = 2filtration=9, next_filtration=10
 L_2=[3];
eig(L_2);
betti2=[betti2; size(null(L_2),2)];
